#version 430

// Define the work group size
layout (local_size_x = 1, local_size_y = 1) in;

// Input texture containing trigger data
layout (binding = 0, rgba8) readonly uniform image2DArray inputTexture;

// Output texture for the trigger visual representation
layout (binding = 1, rgba8) writeonly uniform image2D outputTexture;

// Uniforms for image and grid sizes
uniform ivec2 imageSize;
uniform ivec2 gridSize;

// Color mappings passed from the Python code
uniform vec4 colorNone;
uniform vec4 colorPlayerSpawn;
uniform vec4 colorHpLargeSpawn;
uniform vec4 colorAmmoLargeSpawn;
uniform vec4 colorAmmoSmallSpawn;
uniform vec4 colorHpSmallSpawn;

// Mapping trigger types to colors
vec4 GetColorForTrigger(int triggerType) {
    if (triggerType == 0) return colorNone;
    if (triggerType == 1) return colorPlayerSpawn;
    if (triggerType == 2) return colorHpLargeSpawn;
    if (triggerType == 3) return colorAmmoLargeSpawn;
    if (triggerType == 4) return colorAmmoSmallSpawn;
    if (triggerType == 5) return colorHpSmallSpawn;
    return colorNone; // Default to none if unknown type
}

void main() {
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);

    // Determine which trigger type is at the current position
    ivec3 texelPos = ivec3(pos, 0);
    ivec4 data = imageLoad(inputTexture, texelPos);
    int triggerType = data.r;

    // Get the color for this trigger type
    vec4 color = GetColorForTrigger(triggerType);

    // Write the color to the output texture
    imageStore(outputTexture, pos, color);
}
